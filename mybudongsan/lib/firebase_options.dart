// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

import 'config/config.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions web = FirebaseOptions(
    apiKey: Config.firebase.web.apiKey,
    appId: Config.firebase.web.appId,
    messagingSenderId: Config.firebase.web.messagingSenderId,
    projectId: Config.firebase.web.projectId,
    authDomain: Config.firebase.web.authDomain,
    storageBucket: Config.firebase.web.storageBucket,
    measurementId: Config.firebase.web.measurementId,
    databaseURL: Config.firebase.web.databaseURL,
  );

  static FirebaseOptions android = FirebaseOptions(
    apiKey: Config.firebase.android.apiKey,
    appId: Config.firebase.android.appId,
    messagingSenderId: Config.firebase.android.messagingSenderId,
    projectId: Config.firebase.android.projectId,
    storageBucket: Config.firebase.android.storageBucket,
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: Config.firebase.ios.apiKey,
    appId: Config.firebase.ios.appId,
    messagingSenderId: Config.firebase.ios.messagingSenderId,
    projectId: Config.firebase.ios.projectId,
    storageBucket: Config.firebase.ios.storageBucket,
    iosBundleId: Config.firebase.ios.iosBundleId,
  );
}
